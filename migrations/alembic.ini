[alembic]
# path to migration scripts
script_location = alembic

# template used to generate migration file names; The default is '%(rev)s_%(slug)s'
# Valid placeholders: %(rev)s, %(slug)s, %(year)d, %(month).2d, %(day).2d, %(hour).2d, %(minute).2d, %(second).2d
file_template = %%%(year)d%%%(month).2d%%%(day).2d_%%%(rev)s

# set to 'true' to run the environment.py script within a transaction
transactional_ddl = true

# set to 'true' to use only the 'create table' clause to generate DDL
output_encoding = utf-8

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic,flask_migrate

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[logger_flask_migrate]
level = INFO
handlers =
qualname = flask_migrate

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
